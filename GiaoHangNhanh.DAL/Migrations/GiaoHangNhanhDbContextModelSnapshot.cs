// <auto-generated />
using System;
using GiaoHangNhanh.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GiaoHangNhanh.DAL.Migrations
{
    [DbContext(typeof(GiaoHangNhanhDbContext))]
    partial class GiaoHangNhanhDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            Value = "This is home page of GiaoHangNhanh"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            Value = "This is keyword of GiaoHangNhanh"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            Value = "This is Description of GiaoHangNhanh"
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChucDanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ChucDanh = "Quản lý bưu cục",
                            ConcurrencyStamp = "f1143050-2ade-4499-a8ae-ad0cc9cb0a35",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản lý bưu cục",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "PostOfficeManager",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "PostOfficeManagerManager"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba5-df3f325983dc"),
                            ChucDanh = "Quản lý",
                            ConcurrencyStamp = "4252f732-1b9a-4f87-a06c-fad45fab25e1",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản lý",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Manager",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "manager"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba6-df3f325983dc"),
                            ChucDanh = "Nhân viên kho",
                            ConcurrencyStamp = "bfef6297-3271-425e-8960-024b46fe3013",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Nhân viên kho",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "WarehouseStaff",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "WarehouseStaff"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba7-df3f325983dc"),
                            ChucDanh = "Nhân viên tiếp nhận khách hàng",
                            ConcurrencyStamp = "fcba2140-97ca-4d0d-ad59-7b861d320e63",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Nhân viên tiếp nhận khách hàng",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "CustomerReceptionStaff",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "CustomerReceptionStaff"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba8-df3f325983dc"),
                            ChucDanh = "Nhân viên giao hàng",
                            ConcurrencyStamp = "40b7c19d-990d-4089-9c21-0e46aa21bdc8",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Nhân viên giao hàng",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Shipper",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "shipper"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba9-df3f325983dc"),
                            ChucDanh = "Quản lý chi nhánh",
                            ConcurrencyStamp = "a300dc0d-23f1-4e41-8a55-7bc21cbd94e1",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản lý chi nhánh",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "BranchManager",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "BranchManager"
                        },
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba3-df3f325983dc"),
                            ChucDanh = "Quản trị hệ thống",
                            ConcurrencyStamp = "4bd83bb6-66e4-449d-890d-c53861714238",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Quản trị hệ thống",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Admin",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = new Guid("38a2e063-1b9f-48d0-b7f8-55f2e835e8f0"),
                            ConcurrencyStamp = "95522f7b-48ab-44b7-9d72-d919b6c7fed1",
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Administrator role",
                            IsDelete = false,
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "admin",
                            NgaySua = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActivateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LeaveDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04852bad-fea3-4a62-8958-8da7223225dc",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Dob = new DateTime(2022, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Tram",
                            IsActive = true,
                            IsDelete = false,
                            LastName = "Nguyen",
                            LockoutEnabled = false,
                            MaNhanVien = "NV30320236",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHTe3+OHvEpZRImn5i1OE7Skc5C0Z4XmOXeWGqQ2fTdMQQ4dq1fNteEjcY2Ar/J1Lw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            StartingDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HuyenId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KhuVucId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("TinhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HuyenId");

                    b.HasIndex("KhuVucId");

                    b.HasIndex("TinhId");

                    b.ToTable("DanhMucBuuCucs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AL1",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(8797),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            HuyenId = 1,
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            KhuVucId = 1,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(8806),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Alpha1",
                            SortOrder = 0,
                            TinhId = 1
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.CongTyGuiHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("HuyenId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KhuVucId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("TinhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HuyenId");

                    b.HasIndex("KhuVucId");

                    b.HasIndex("TinhId");

                    b.ToTable("DanhMucCongTyGuiHangs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SPC",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 685, DateTimeKind.Local).AddTicks(1228),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            HuyenId = 1,
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            KhuVucId = 1,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 685, DateTimeKind.Local).AddTicks(1237),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Shopee",
                            PhoneNumber = "0958624542",
                            SortOrder = 0,
                            TinhId = 1
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.DangKyChuyenHoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MieuTaNguyenNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyenNhan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DangKyChuyenHoans");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.DangKyKienVanDe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhanLoaiHangBatThuongId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhanLoaiHangBatThuongId");

                    b.HasIndex("VanDonId");

                    b.ToTable("DangKyKienVanDes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "DKKVD",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 686, DateTimeKind.Local).AddTicks(1149),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 686, DateTimeKind.Local).AddTicks(1157),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            PhanLoaiHangBatThuongId = 1,
                            SortOrder = 0,
                            VanDonId = 1
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.DichVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DanhMucDichVus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "GHQT",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(8565),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(8586),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Giao hàng quốc tế",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "N",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(1099),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(1118),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Nam",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "NU",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(1157),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(1161),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Nữ",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Huyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("TinhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TinhId");

                    b.ToTable("DanhMucHuyens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "NT",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(5741),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(5747),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Thành phố Nha Trang",
                            SortOrder = 0,
                            TinhId = 1
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CCCD")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.KhuVuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HuyenId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HuyenId");

                    b.ToTable("DanhMucKhuVucs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "VN",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(7427),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            HuyenId = 1,
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(7441),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Vĩnh Ngọc",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.KyNhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BuuCucId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DauKyThay")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayKyNhan")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NhanVienPhat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("TenNguoiKy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BuuCucId");

                    b.ToTable("KyNhans");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuBaoHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDongBao")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SealBao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("VanDonId");

                    b.ToTable("LichSuBaoHangs");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuChuyenHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BuuCucId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsXeDi")
                        .HasColumnType("bit");

                    b.Property<string>("MaSealBao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SealXe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuuCucId");

                    b.HasIndex("VanDonId");

                    b.ToTable("LichSuChuyenHangs");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuGuiHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BuuCucId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("TramSauId")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuuCucId");

                    b.ToTable("LichSuGuiHangs");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuHangDen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BuuCucId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuuCucId");

                    b.HasIndex("VanDonId");

                    b.ToTable("LichSuHangDens");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuNhapKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BuuCucGuiHangId")
                        .HasColumnType("int");

                    b.Property<int?>("BuuCucId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BuuCucId");

                    b.ToTable("LichSuNhapKhos");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuPhatHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("VanDonId");

                    b.ToTable("LichSuPhatHangs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PH",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(3990),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(2720),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            NhanVienId = 1,
                            SortOrder = 0,
                            VanDonId = 1
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "KH",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 681, DateTimeKind.Local).AddTicks(706),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns = 'http://www.w3.org/2000/svg' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><path d = 'M18,14 C16.3431458,14 15,12.6568542 15,11 C15,9.34314575 16.3431458,8 18,8 C19.6568542,8 21,9.34314575 21,11 C21,12.6568542 19.6568542,14 18,14 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z' fill='#000000' fill-rule='nonzero' opacity='0.3'></path><path d = 'M17.6011961,15.0006174 C21.0077043,15.0378534 23.7891749,16.7601418 23.9984937,20.4 C24.0069246,20.5466056 23.9984937,21 23.4559499,21 L19.6,21 C19.6,18.7490654 18.8562935,16.6718327 17.6011961,15.0006174 Z M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z' fill='#000000' fill-rule='nonzero'></path></svg></span></span>",
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 681, DateTimeKind.Local).AddTicks(2044),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Khách hàng",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionName = "Index",
                            Code = "KH_KH",
                            ControllerName = "KhachHang",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(1371),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/KhachHang/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(1388),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Khách hàng",
                            ParentId = 1,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "VD",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3142),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'><rect x='0' y='0' width='24' height='24'></rect><rect fill='#000000' x='4' y='4' width='7' height='7' rx='1.5'></rect><path d='M5.5,13 L9.5,13 C10.3284271,13 11,13.6715729 11,14.5 L11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L5.5,20 C4.67157288,20 4,19.3284271 4,18.5 L4,14.5 C4,13.6715729 4.67157288,13 5.5,13 Z M14.5,4 L18.5,4 C19.3284271,4 20,4.67157288 20,5.5 L20,9.5 C20,10.3284271 19.3284271,11 18.5,11 L14.5,11 C13.6715729,11 13,10.3284271 13,9.5 L13,5.5 C13,4.67157288 13.6715729,4 14.5,4 Z M14.5,13 L18.5,13 C19.3284271,13 20,13.6715729 20,14.5 L20,18.5 C20,19.3284271 19.3284271,20 18.5,20 L14.5,20 C13.6715729,20 13,19.3284271 13,18.5 L13,14.5 C13,13.6715729 13.6715729,13 14.5,13 Z' fill='#000000' opacity='0.3'></path></g></svg></span></span>",
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3156),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Vận đơn",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 4,
                            ActionName = "Index",
                            Code = "VD_TVD",
                            ControllerName = "VanDon",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3166),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/VanDon/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3170),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tra vận đơn",
                            ParentId = 3,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "TT",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3180),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'><rect x='0' y='0' width='24' height='24'></rect><rect fill='#000000' x='4' y='4' width='7' height='7' rx='1.5'></rect><path d='M5.5,13 L9.5,13 C10.3284271,13 11,13.6715729 11,14.5 L11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L5.5,20 C4.67157288,20 4,19.3284271 4,18.5 L4,14.5 C4,13.6715729 4.67157288,13 5.5,13 Z M14.5,4 L18.5,4 C19.3284271,4 20,4.67157288 20,5.5 L20,9.5 C20,10.3284271 19.3284271,11 18.5,11 L14.5,11 C13.6715729,11 13,10.3284271 13,9.5 L13,5.5 C13,4.67157288 13.6715729,4 14.5,4 Z M14.5,13 L18.5,13 C19.3284271,13 20,13.6715729 20,14.5 L20,18.5 C20,19.3284271 19.3284271,20 18.5,20 L14.5,20 C13.6715729,20 13,19.3284271 13,18.5 L13,14.5 C13,13.6715729 13.6715729,13 14.5,13 Z' fill='#000000' opacity='0.3'></path></g></svg></span></span>",
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3184),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Thao Tác",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 6,
                            ActionName = "Index",
                            Code = "TT_KN",
                            ControllerName = "KyNhan",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3193),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/KyNhan/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3198),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Ký nhận",
                            ParentId = 5,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 8,
                            ActionName = "Index",
                            Code = "TT_LSNK",
                            ControllerName = "LichSuNhapKho",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3205),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/LichSuNhapKho/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3208),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lịch sử nhập kho",
                            ParentId = 5,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 9,
                            ActionName = "Index",
                            Code = "TT_LSDB",
                            ControllerName = "LichSuDongBao",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3216),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/LichSuDongBao/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3218),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lịch sử đóng bao",
                            ParentId = 5,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 10,
                            ActionName = "Index",
                            Code = "TT_LSTB",
                            ControllerName = "LichSuThaoBao",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3222),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/LichSuThaoBao/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3224),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lịch sử tháo bao",
                            ParentId = 5,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 11,
                            ActionName = "Index",
                            Code = "TT_LSXDE",
                            ControllerName = "LichSuXeDen",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3233),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/LichSuXeDen/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3235),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lịch sử xe đến",
                            ParentId = 5,
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 12,
                            ActionName = "Index",
                            Code = "TT_LSXD",
                            ControllerName = "LichSuXeDi",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3241),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/LichSuXeDi/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3246),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lịch sử xe đi",
                            ParentId = 5,
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 13,
                            ActionName = "Index",
                            Code = "TT_LSGH",
                            ControllerName = "LichSuGuiHang",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3250),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/LichSuGuiHang/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3255),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lịch sử gửi hàng",
                            ParentId = 5,
                            SortOrder = 8
                        },
                        new
                        {
                            Id = 29,
                            ActionName = "Index",
                            Code = "TT_LSPH",
                            ControllerName = "LichSuPhatHang",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3262),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/LichSuPhatHang/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3266),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lịch sử phát hàng",
                            ParentId = 5,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 28,
                            ActionName = "Index",
                            Code = "TT_DKCH",
                            ControllerName = "DangKyChuyenHoan",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3273),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/DangKyChuyenHoan/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3275),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đăng ký chuyển hoàn",
                            ParentId = 5,
                            SortOrder = 9
                        },
                        new
                        {
                            Id = 30,
                            ActionName = "Index",
                            Code = "TT_DKKVD",
                            ControllerName = "DangKyKienVanDe",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3285),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/DangKyKienVanDe/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3287),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Đăng ký kiện vấn đề",
                            ParentId = 5,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 14,
                            Code = "DM",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3294),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24px' height='24px' viewBox='0 0 24 24' version='1.1'><g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'><rect x='0' y='0' width='24' height='24'></rect><rect fill='#000000' x='4' y='4' width='7' height='7' rx='1.5'></rect><path d='M5.5,13 L9.5,13 C10.3284271,13 11,13.6715729 11,14.5 L11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L5.5,20 C4.67157288,20 4,19.3284271 4,18.5 L4,14.5 C4,13.6715729 4.67157288,13 5.5,13 Z M14.5,4 L18.5,4 C19.3284271,4 20,4.67157288 20,5.5 L20,9.5 C20,10.3284271 19.3284271,11 18.5,11 L14.5,11 C13.6715729,11 13,10.3284271 13,9.5 L13,5.5 C13,4.67157288 13.6715729,4 14.5,4 Z M14.5,13 L18.5,13 C19.3284271,13 20,13.6715729 20,14.5 L20,18.5 C20,19.3284271 19.3284271,20 18.5,20 L14.5,20 C13.6715729,20 13,19.3284271 13,18.5 L13,14.5 C13,13.6715729 13.6715729,13 14.5,13 Z' fill='#000000' opacity='0.3'></path></g></svg></span></span>",
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3298),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Danh mục",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 15,
                            ActionName = "Index",
                            Code = "DM_DV",
                            ControllerName = "DanhMucDichVu",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3302),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/DichVu/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3307),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Dịch vụ",
                            ParentId = 14,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 16,
                            ActionName = "Index",
                            Code = "DM_CTGH",
                            ControllerName = "DanhMucCongTyGuiHang",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3313),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/CongTyGuiHang/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3317),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Công ty gửi hàng",
                            ParentId = 14,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 17,
                            ActionName = "Index",
                            Code = "DM_PTTT",
                            ControllerName = "DanhMucPhuongThucThanhToan",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3326),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/PhuongThucThanhToan/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3328),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phương thức thanh toán",
                            ParentId = 14,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 7,
                            ActionName = "Index",
                            Code = "DM_PLHBT",
                            ControllerName = "PhanLoaiHangBatThuong",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3337),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/PhanLoaiHangBatThuong/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3339),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phân loại hàng bất thường",
                            ParentId = 14,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 27,
                            ActionName = "Index",
                            Code = "DM_GT",
                            ControllerName = "Gender",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3346),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/Gender/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3351),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Giới tính",
                            ParentId = 14,
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 18,
                            Code = "QTHT",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3354),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Icon = "<span class='menu-icon'><span class='svg-icon svg-icon-2'><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'><path opacity='0.25' d='M2 6.5C2 4.01472 4.01472 2 6.5 2H17.5C19.9853 2 22 4.01472 22 6.5V6.5C22 8.98528 19.9853 11 17.5 11H6.5C4.01472 11 2 8.98528 2 6.5V6.5Z' fill='#12131A'></path><path d='M20 6.5C20 7.88071 18.8807 9 17.5 9C16.1193 9 15 7.88071 15 6.5C15 5.11929 16.1193 4 17.5 4C18.8807 4 20 5.11929 20 6.5Z' fill='#12131A'></path><path opacity='0.25' d='M2 17.5C2 15.0147 4.01472 13 6.5 13H17.5C19.9853 13 22 15.0147 22 17.5V17.5C22 19.9853 19.9853 22 17.5 22H6.5C4.01472 22 2 19.9853 2 17.5V17.5Z' fill='#12131A'></path><path d='M9 17.5C9 18.8807 7.88071 20 6.5 20C5.11929 20 4 18.8807 4 17.5C4 16.1193 5.11929 15 6.5 15C7.88071 15 9 16.1193 9 17.5Z' fill='#12131A'></path></svg></span></span>",
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3358),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Quản trị hệ thống",
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 19,
                            ActionName = "Index",
                            Code = "QTHT_AC",
                            ControllerName = "Staff",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3366),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/Staff/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3368),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Người sử dụng",
                            ParentId = 18,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 20,
                            ActionName = "Index",
                            Code = "QTHT_NV",
                            ControllerName = "NhanVien",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3377),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/NhanVien/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3379),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Nhân Viên",
                            ParentId = 18,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 21,
                            ActionName = "Index",
                            Code = "QTHT_PQ",
                            ControllerName = "AppRole",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3385),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/AppRole/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3390),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Phân quyền",
                            ParentId = 18,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 22,
                            ActionName = "Index",
                            Code = "QTHT_DMHT_T",
                            ControllerName = "Tinh",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3394),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/Tinh/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3400),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tỉnh",
                            ParentId = 18,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 23,
                            ActionName = "Index",
                            Code = "QTHT_DMHT_H",
                            ControllerName = "Huyen",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3406),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/Huyen/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3410),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Huyện",
                            ParentId = 18,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 24,
                            ActionName = "Index",
                            Code = "QTHT_DMHT_KV",
                            ControllerName = "KhuVuc",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3417),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/KhuVuc/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3419),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Khu vực",
                            ParentId = 18,
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 25,
                            ActionName = "Index",
                            Code = "QTHT_DMHT_BC",
                            ControllerName = "BuuCuc",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3426),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/BuuCuc/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3431),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Bưu cục",
                            ParentId = 18,
                            SortOrder = 7
                        },
                        new
                        {
                            Id = 26,
                            ActionName = "Index",
                            Code = "QTHT_DMHT_M",
                            ControllerName = "Menu",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3436),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            Link = "/Menu/Index",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(3440),
                            ModifiedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Menu",
                            ParentId = 18,
                            SortOrder = 8
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.MenuAppRole", b =>
                {
                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("MenuAppRoleType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("AppRoleId", "MenuId", "Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuAppRoles");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.NhanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BuuCucLamViecId")
                        .HasColumnType("int");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayLamViec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNghiViec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuuCucLamViecId");

                    b.HasIndex("GenderId");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuuCucLamViecId = 1,
                            CCCD = "123456789",
                            Code = "NV01",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(5415),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            DiaChi = "79 Mai Thi Dong, Khanh Hoa",
                            Email = "vuthanh@gmail.com",
                            FirstName = "Thanh",
                            GenderId = 1,
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            LastName = "Vu",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(2707),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            NoiSinh = "Ninh Thuan",
                            SoDienThoai = "0123456789",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            BuuCucLamViecId = 1,
                            CCCD = "102030405060",
                            Code = "NV02",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(1343),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            DiaChi = "79 Mai Thi Dong, Khanh Hoa",
                            Email = "nguyentram@gmail.com",
                            FirstName = "Tram",
                            GenderId = 2,
                            IsActive = true,
                            IsDefault = false,
                            IsDeleted = false,
                            LastName = "Nguyen",
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(1335),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            NoiSinh = "Ninh Thuan",
                            SoDienThoai = "0102030405",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.PhanLoaiHangBatThuong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DanhMucPhanLoaiHangBatThuongs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "KHTC",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(5020),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 684, DateTimeKind.Local).AddTicks(5028),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Khách hàng từ chối nhận",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.PhanLoaiVanDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DanhMucPhanLoaiHangBTId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDMPhanLoaiHangBT")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaVanDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("VanDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DanhMucPhanLoaiHangBTId");

                    b.HasIndex("VanDonId");

                    b.ToTable("PhanLoaiVanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.PhuongThucThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DanhMucPhuongThucThanhToans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TT",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(28),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 683, DateTimeKind.Local).AddTicks(41),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Thanh toán trực tiếp",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Tinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DanhMucTinhs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "KH",
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(5095),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 682, DateTimeKind.Local).AddTicks(5111),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            Name = "Khánh Hòa",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.VanDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BuuCucHangDenId")
                        .HasColumnType("int");

                    b.Property<decimal>("COD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CongTyGuiHangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DichVuId")
                        .HasColumnType("int");

                    b.Property<string>("DienThoaiNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoaiNguoiNhan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("GiaTriHangHoa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoTenNguoiGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenNguoiNhan")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("HuyenId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<int?>("KhuVucId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGuiHang")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<Guid?>("NhanVienLayHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiDungHangHoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhuongThucThanhToanId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("TinhId")
                        .HasColumnType("int");

                    b.Property<double>("TrongLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BuuCucHangDenId");

                    b.HasIndex("CongTyGuiHangId");

                    b.HasIndex("DichVuId");

                    b.HasIndex("HuyenId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("KhuVucId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("NhanVienLayHangId");

                    b.HasIndex("PhuongThucThanhToanId");

                    b.HasIndex("TinhId");

                    b.ToTable("VanDons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuuCucHangDenId = 1,
                            COD = 12000m,
                            Code = "920293392206",
                            CongTyGuiHangId = 1,
                            CreatedDate = new DateTime(2023, 3, 30, 21, 14, 6, 685, DateTimeKind.Local).AddTicks(3955),
                            CreatedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            DiaChiNguoiGui = "123 Thống nhất, Ninh Thuận",
                            DiaChiNguoiNhan = "79 Mai Thi Dong, Khánh Hòa",
                            DichVuId = 1,
                            DienThoaiNguoiGui = "01627038692",
                            DienThoaiNguoiNhan = "0905684251",
                            GiaTriHangHoa = 0m,
                            HoTenNguoiGui = "Shopee",
                            HoTenNguoiNhan = "Vũ Thành",
                            IsActive = false,
                            IsDefault = false,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2023, 3, 30, 21, 14, 6, 685, DateTimeKind.Local).AddTicks(3966),
                            ModifiedUserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            NgayGuiHang = new DateTime(2023, 3, 30, 21, 14, 6, 685, DateTimeKind.Local).AddTicks(9491),
                            NhanVienId = 1,
                            NoiDungHangHoa = "Quần áo",
                            PhuongThucThanhToanId = 1,
                            SortOrder = 0,
                            TrongLuong = 0.59999999999999998
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("447fe343-9985-412c-bb19-c6f398bc014f"),
                            RoleId = new Guid("38a2e063-1b9f-48d0-b7f8-55f2e835e8f0")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Huyen", "Huyen")
                        .WithMany("BuuCucs")
                        .HasForeignKey("HuyenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.KhuVuc", "KhuVuc")
                        .WithMany("BuuCucs")
                        .HasForeignKey("KhuVucId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Tinh", "Tinh")
                        .WithMany("BuuCucs")
                        .HasForeignKey("TinhId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Huyen");

                    b.Navigation("KhuVuc");

                    b.Navigation("Tinh");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.CongTyGuiHang", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Huyen", "Huyen")
                        .WithMany("CongTyGuiHangs")
                        .HasForeignKey("HuyenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.KhuVuc", "KhuVuc")
                        .WithMany("CongTyGuiHangs")
                        .HasForeignKey("KhuVucId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Tinh", "Tinh")
                        .WithMany("CongTyGuiHangs")
                        .HasForeignKey("TinhId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Huyen");

                    b.Navigation("KhuVuc");

                    b.Navigation("Tinh");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.DangKyKienVanDe", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.PhanLoaiHangBatThuong", "PhanLoaiHangBatThuong")
                        .WithMany("DangKyKienVanDes")
                        .HasForeignKey("PhanLoaiHangBatThuongId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.VanDon", "VanDon")
                        .WithMany("DangKyKienVanDes")
                        .HasForeignKey("VanDonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PhanLoaiHangBatThuong");

                    b.Navigation("VanDon");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Huyen", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Tinh", "Tinh")
                        .WithMany("Huyens")
                        .HasForeignKey("TinhId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Tinh");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.KhuVuc", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Huyen", "Huyen")
                        .WithMany("KhuVucs")
                        .HasForeignKey("HuyenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Huyen");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.KyNhan", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", "BuuCuc")
                        .WithMany("KyNhans")
                        .HasForeignKey("BuuCucId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AppUser");

                    b.Navigation("BuuCuc");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuBaoHang", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.AppUser", null)
                        .WithMany("LichSuBaoHangs")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.VanDon", null)
                        .WithMany("LichSuBaoHangs")
                        .HasForeignKey("VanDonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuChuyenHang", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", null)
                        .WithMany("LichSuChuyenHangs")
                        .HasForeignKey("BuuCucId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.VanDon", null)
                        .WithMany("LichSuChuyenHangs")
                        .HasForeignKey("VanDonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuGuiHang", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", null)
                        .WithMany("LichSuGuiHangs")
                        .HasForeignKey("BuuCucId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuHangDen", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", "BuuCuc")
                        .WithMany("LichSuHangDens")
                        .HasForeignKey("BuuCucId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.VanDon", "VanDon")
                        .WithMany()
                        .HasForeignKey("VanDonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BuuCuc");

                    b.Navigation("VanDon");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuNhapKho", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.AppUser", null)
                        .WithMany("LichSuNhapKhos")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", null)
                        .WithMany("LichSuNhapKhos")
                        .HasForeignKey("BuuCucId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.LichSuPhatHang", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.NhanVien", "NhanVien")
                        .WithMany("LichSuPhatHangs")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.VanDon", "VanDon")
                        .WithMany("LichSuPhatHangs")
                        .HasForeignKey("VanDonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NhanVien");

                    b.Navigation("VanDon");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.MenuAppRole", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.AppRole", "AppRole")
                        .WithMany("MenuAppRoles")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Menu", "Menu")
                        .WithMany("MenuAppRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.NhanVien", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", "BuuCuc")
                        .WithMany("NhanViens")
                        .HasForeignKey("BuuCucLamViecId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Gender", "Gender")
                        .WithMany("NhanViens")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BuuCuc");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.PhanLoaiVanDon", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.AppUser", null)
                        .WithMany("PhanLoaiHangBatThuongs")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.PhanLoaiHangBatThuong", "DanhMucPhanLoaiHangBT")
                        .WithMany()
                        .HasForeignKey("DanhMucPhanLoaiHangBTId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.VanDon", "VanDon")
                        .WithMany()
                        .HasForeignKey("VanDonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DanhMucPhanLoaiHangBT");

                    b.Navigation("VanDon");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.VanDon", b =>
                {
                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", "BuuCuc")
                        .WithMany("VanDons")
                        .HasForeignKey("BuuCucHangDenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.CongTyGuiHang", "CongTyGuiHang")
                        .WithMany("VanDons")
                        .HasForeignKey("CongTyGuiHangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.DichVu", "DichVu")
                        .WithMany("VanDons")
                        .HasForeignKey("DichVuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Huyen", null)
                        .WithMany("VanDons")
                        .HasForeignKey("HuyenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.KhachHang", null)
                        .WithMany("VanDons")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.KhuVuc", null)
                        .WithMany("VanDons")
                        .HasForeignKey("KhuVucId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.NhanVien", "NhanVien")
                        .WithMany("VanDons")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.AppUser", "NhanVienLayHang")
                        .WithMany("VanDons")
                        .HasForeignKey("NhanVienLayHangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("VanDons")
                        .HasForeignKey("PhuongThucThanhToanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GiaoHangNhanh.DAL.Entities.Entity.Tinh", null)
                        .WithMany("VanDons")
                        .HasForeignKey("TinhId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BuuCuc");

                    b.Navigation("CongTyGuiHang");

                    b.Navigation("DichVu");

                    b.Navigation("NhanVien");

                    b.Navigation("NhanVienLayHang");

                    b.Navigation("PhuongThucThanhToan");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.AppRole", b =>
                {
                    b.Navigation("MenuAppRoles");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.AppUser", b =>
                {
                    b.Navigation("LichSuBaoHangs");

                    b.Navigation("LichSuNhapKhos");

                    b.Navigation("PhanLoaiHangBatThuongs");

                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.BuuCuc", b =>
                {
                    b.Navigation("KyNhans");

                    b.Navigation("LichSuChuyenHangs");

                    b.Navigation("LichSuGuiHangs");

                    b.Navigation("LichSuHangDens");

                    b.Navigation("LichSuNhapKhos");

                    b.Navigation("NhanViens");

                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.CongTyGuiHang", b =>
                {
                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.DichVu", b =>
                {
                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Gender", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Huyen", b =>
                {
                    b.Navigation("BuuCucs");

                    b.Navigation("CongTyGuiHangs");

                    b.Navigation("KhuVucs");

                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.KhachHang", b =>
                {
                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.KhuVuc", b =>
                {
                    b.Navigation("BuuCucs");

                    b.Navigation("CongTyGuiHangs");

                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Menu", b =>
                {
                    b.Navigation("MenuAppRoles");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.NhanVien", b =>
                {
                    b.Navigation("LichSuPhatHangs");

                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.PhanLoaiHangBatThuong", b =>
                {
                    b.Navigation("DangKyKienVanDes");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.PhuongThucThanhToan", b =>
                {
                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.Tinh", b =>
                {
                    b.Navigation("BuuCucs");

                    b.Navigation("CongTyGuiHangs");

                    b.Navigation("Huyens");

                    b.Navigation("VanDons");
                });

            modelBuilder.Entity("GiaoHangNhanh.DAL.Entities.Entity.VanDon", b =>
                {
                    b.Navigation("DangKyKienVanDes");

                    b.Navigation("LichSuBaoHangs");

                    b.Navigation("LichSuChuyenHangs");

                    b.Navigation("LichSuPhatHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
